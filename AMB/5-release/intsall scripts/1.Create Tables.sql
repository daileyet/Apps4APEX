REM AMB_OPS_DEFINITION
CREATE TABLE AMB_OPS_DEFINITION
(
    OPS_CODE    VARCHAR2 (100) NOT NULL ,
    OPS_NAME    VARCHAR2 (500) ,
    OPS_TYPE    VARCHAR2 (100) ,
    OPS_TRAGET  VARCHAR2 (100) ,
    OPS_DEFAULT VARCHAR2 (500) ,
    OPS_DESC    VARCHAR2 (1000)
)
/
ALTER TABLE AMB_OPS_DEFINITION ADD CONSTRAINT AMB_OPS_DEF_PK PRIMARY KEY(OPS_CODE)
/
REM AMB_OPS_PROJECT
CREATE TABLE AMB_OPS_PROJECT
(
    PROJECT_ID VARCHAR2 (100) NOT NULL ,
    OPS_CODE   VARCHAR2 (100) NOT NULL ,
    OPS_VALUE  VARCHAR2 (500) ,
    OPS_STYLE  VARCHAR2 (10) ,
    OPS_DESC   VARCHAR2 (1000)
)
/
ALTER TABLE AMB_OPS_PROJECT ADD CONSTRAINT AMB_OPS_PROJ_PK PRIMARY KEY
(
  PROJECT_ID, OPS_CODE
)
/
REM AMB_OPS_VERSION
CREATE TABLE AMB_OPS_VERSION
(
    VERSION_ID VARCHAR2 (100) NOT NULL ,
    OPS_CODE   VARCHAR2 (100) NOT NULL ,
    OPS_VALUE  VARCHAR2 (500) ,
    OPS_STYLE  VARCHAR2 (10) ,
    OPS_DESC   VARCHAR2 (1000)
)
/
ALTER TABLE AMB_OPS_VERSION ADD CONSTRAINT AMB_OPS_VERSION_PK PRIMARY KEY
(
  VERSION_ID, OPS_CODE
)
/
REM AMB_OPS_OBJECT
CREATE TABLE AMB_OPS_OBJECT
(
    OBJECT_ID VARCHAR2 (100) NOT NULL ,
    OPS_CODE  VARCHAR2 (100) NOT NULL ,
    OPS_VALUE VARCHAR2 (500) ,
    OPS_STYLE VARCHAR2 (10) ,
    OPS_DESC  VARCHAR2 (1000)
)
/
ALTER TABLE AMB_OPS_OBJECT ADD CONSTRAINT AMB_OPS_OBJECT_PK PRIMARY KEY
(
  OBJECT_ID, OPS_CODE
)
/
REM AMB_PROJECT
CREATE TABLE AMB_PROJECT
  (
    ID          VARCHAR2 (100) NOT NULL ,
    NAME        VARCHAR2 (100) ,
    DESCRIPTION VARCHAR2 (1000)
  )
/
ALTER TABLE AMB_PROJECT ADD CONSTRAINT AMB_PROJECT_PK PRIMARY KEY
(
  ID
)
/
REM AMB_VERSION
CREATE TABLE AMB_VERSION
  (
    ID          VARCHAR2 (100) NOT NULL ,
    PROJECT_ID  VARCHAR2 (100) NOT NULL ,
    APP_ID      INTEGER ,
    APP_NAME    VARCHAR2 (200) ,
    WORKSPACE   VARCHAR2 (100) ,
    ENVIRONMENT VARCHAR2 (50) ,
    SCHEMA      VARCHAR2 (100) ,
    EDITION     VARCHAR2 (50) ,
    ACTIVE      CHAR (1) ,
    IS_BASE     CHAR (1)
  )
/
ALTER TABLE AMB_VERSION ADD CONSTRAINT AMB_VERSION_PK PRIMARY KEY
(
  ID
)
/
ALTER TABLE AMB_VERSION ADD CONSTRAINT AMB_VERSION_AMB_PROJECT_FK FOREIGN KEY
(
  PROJECT_ID
)
REFERENCES AMB_PROJECT
(
  ID
)
/
REM AMB_OBJECT
CREATE TABLE AMB_OBJECT
  (
    ID         VARCHAR2 (100) NOT NULL ,
    VERSION_ID VARCHAR2 (100) NOT NULL ,
    NAME       VARCHAR2 (30) ,
    TYPE       VARCHAR2 (50) ,
    CONTENT CLOB ,
    REFERENCE   VARCHAR2 (100) ,
    CREATE_DATE TIMESTAMP WITH TIME ZONE ,
    CREATE_BY   VARCHAR2 (500) ,
    UPDATE_DATE TIMESTAMP WITH TIME ZONE ,
    UPDATE_BY   VARCHAR2 (500) ,
    DESCRIPTION VARCHAR2 (4000) ,
    COMPILED    VARCHAR2 (10)
  )
/
ALTER TABLE AMB_OBJECT ADD CONSTRAINT AMB_OBJECT_PK PRIMARY KEY
(
  ID
)
/
ALTER TABLE AMB_OBJECT ADD CONSTRAINT AMB_OBJECT_AMB_VERSION_FK FOREIGN KEY
(
  VERSION_ID
)
REFERENCES AMB_VERSION
(
  ID
)
/
REM AMB_BEIL_LIST
CREATE TABLE AMB_BEIL_LIST
  (
    ID          VARCHAR2 (100) ,
    VERSION_ID  VARCHAR2 (100) ,
    NAME        VARCHAR2 (30) ,
    TYPE        VARCHAR2 (50) ,
    NEED_BUILD  VARCHAR2 (3) ,
    NEED_EXPORT VARCHAR2 (3) ,
    NEED_IMPORT VARCHAR2 (3) ,
    NEED_LOAD   VARCHAR2 (3) ,
    CONTENT CLOB ,
    CREATE_DATE TIMESTAMP WITH TIME ZONE ,
    CREATE_BY   VARCHAR2 (500) ,
    DESCRIPTION VARCHAR2 (4000) ,
    IS_SUCCESS  VARCHAR2 (3) ,
    FAILED_MSG  VARCHAR2 (4000)
  )
/
REM AMB_OBJECT_INTERIM
CREATE TABLE AMB_OBJECT_INTERIM
  (
    ID         VARCHAR2 (100) NOT NULL ,
    VERSION_ID VARCHAR2 (100) NOT NULL ,
    NAME       VARCHAR2 (30) ,
    TYPE       VARCHAR2 (50) ,
    CONTENT CLOB ,
    REFERENCE   VARCHAR2 (100) ,
    CREATE_DATE TIMESTAMP WITH TIME ZONE ,
    CREATE_BY   VARCHAR2 (500) ,
    UPDATE_DATE TIMESTAMP WITH TIME ZONE ,
    UPDATE_BY   VARCHAR2 (500) ,
    DESCRIPTION VARCHAR2 (4000) ,
    COMPILED    VARCHAR2 (10)
  )
/
ALTER TABLE AMB_OBJECT_INTERIM ADD CONSTRAINT AMB_OBJECT_INTER_PK PRIMARY KEY
(
  ID
)
/
REM AMB_LOGS
CREATE TABLE AMB_LOGS
  (
    LOG_TYPE  VARCHAR2 (100) ,
    LOG_TIME  TIMESTAMP WITH TIME ZONE ,
    LOG_DESC  VARCHAR2 (4000) ,
    LOG_POINT VARCHAR2 (500)
  )
/


































































































